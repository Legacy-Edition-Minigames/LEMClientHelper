plugins {
	id 'fabric-loom' version '0.12-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	maven { url 'https://maven.terraformersmc.com/' }
	maven { url = "https://maven.kyrptonaught.dev" }

	//midnight controls
	mavenLocal()
	mavenCentral()
	maven { url 'https://aperlambda.github.io/maven' }
	maven {
		name 'Gegy'
		url 'https://maven.gegy.dev'
	}
	maven {
		name = "CottonMC"
		url = "https://server.bbkr.space/artifactory/libs-release"
	}
	maven { url "https://maven.terraformersmc.com/releases/" }
	maven { url 'https://maven.kosmx.dev' }
	maven { url 'https://maven.shedaniel.me/' }
	maven { url 'https://jitpack.io' }
	maven { url "https://api.modrinth.com/maven" }
	maven { url 'https://maven.quiltmc.org/repository/release'}
}

loom {
	accessWidenerPath = file("src/main/resources/lemclienthelper.accesswidener")
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	//modImplementation "dev.lambdaurora:lambdacontrols:1.7.1+1.17"
	optionalDependency('eu.midnightdust:midnightcontrols:1.5.0-1.19')

	modImplementation('net.kyrptonaught:kyrptconfig:1.4.16-1.19')
	include('net.kyrptonaught:kyrptconfig:1.4.16-1.19')
}

def optionalDependency(String dep) {
	dependencies.modImplementation (dep) {
		exclude module: "RoughlyEnoughItems-runtime-fabric"
	}
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}" }
	}
}