plugins {
	id 'fabric-loom' version '1.0-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	maven { url = "https://maven.terraformersmc.com/" }
	maven { url = "https://maven.kyrptonaught.dev" }
	maven { url = "https://api.modrinth.com/maven" }
	maven { url = "https://aperlambda.github.io/maven" }
	maven { url = "https://maven.gegy.dev" }
}

loom {
	accessWidenerPath = file("src/main/resources/lemclienthelper.accesswidener")
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation('net.kyrptonaught:kyrptconfig:1.5.0-1.19')
	include('net.kyrptonaught:kyrptconfig:1.5.0-1.19')

	modImplementation "com.ptsmods:devlogin:3.1.1"

	//midnightcontrols
	modImplementation "dev.lambdaurora:spruceui:4.0.0+1.19"
	modImplementation "maven.modrinth:midnightlib:1.0.0-fabric"
	modImplementation "maven.modrinth:midnightcontrols:1.7.4+1.19"
	api('org.aperlambda:lambdajcommon:1.8.1') {
		exclude group: 'com.google.code.gson'
		exclude group: 'com.google.guava'
	}
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}" }
	}
}